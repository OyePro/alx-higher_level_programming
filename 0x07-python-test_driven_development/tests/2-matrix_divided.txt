=================================================
 testing function 2-matrix_divided using doctest
=================================================

# run using python3 -m doctest -v ./tests/2-matrix_divided.txt``
=================================================================

``Importing the function``
::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

``Testing the success of the function``
::
    >>> matrix = [
    ... [3, 6, 9],
    ... [12, 15, 18],
    ... [21, 24, 27]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]
    >>> matrix_divided(matrix, 1.5)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], [14.0, 16.0, 18.0]]

``Testing when value of div is neither int nor float``
::
    >>> matrix_divided(matrix, "3")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    >>> matrix_divided(matrix, True)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

``Testing when matrix is not list, empty matrix and when matrix[0] is zero``
::
    >>> matrix = (
    ... [1, 4, 6],
    ... [2, 3, 4]    
    ... )
    >>> matrix_divided(matrix, 2.5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = ""
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [
    ... [],
    ... [1, 2, 3]
    ... ]
    >>> matrix_divided(matrix, 1.6)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

``Testing the rows and elements of the matrix``
::
    >>> matrix = [
    ... (1, 2, 3),
    ... (4, 5, 6)
    ... ]
    >>> matrix_divided(matrix, 0.56)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [
    ... [1, 2],
    ... [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 5.64)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix = [
    ... [1, (2, 3), 6],
    ... ["a", 5, 7]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[True, 5, 6], [False, 2, 1]]
    >>> matrix_divided(matrix, 0.66)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
