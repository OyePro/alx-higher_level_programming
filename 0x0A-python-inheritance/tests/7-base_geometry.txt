==========================================
 Testing class BaseGeometry using doctest
==========================================

# run using ``python3 -m doctest -v ./tests/7-base_geometry.txt``

``Importing the class``
::
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

``Testing method integer_validator``
::
    >>> bg.integer_validator("age", 7)

    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("john height", [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: john height must be an integer

    >>> bg.integer_validator("height", "3")
    Traceback (most recent call last):
    ...
    TypeError: height must be an integer

    >>> bg.integer_validator("age", (1,))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("Age", 0)
    Traceback (most recent call last):
    ...
    ValueError: Age must be greater than 0

    >>> bg.integer_validator("Age", -1)
    Traceback (most recent call last):
    ...
    ValueError: Age must be greater than 0

    >>> bg.integer_validator("weight")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg.integer_validator("age", {1, 2})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    

``Testing method area``
::
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> bg.area(4)
    Traceback (most recent call last):
    ...
    TypeError: area() takes 1 positional argument but 2 were given
